async function handleFormspreeSubmit(event) {
    event.preventDefault();
    
    const form = event.target;
    const submitButton = form.querySelector('button[type="submit"]');
    const statusDiv = document.getElementById('contact-form-status');
    
    submitButton.disabled = true;
    submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>–û—Ç–ø—Ä–∞–≤–∫–∞...';
    
    try {
        const formData = {
            firstName: form.firstName.value,
            lastName: form.lastName.value,
            telegram: form.telegram.value,
            email: form.email.value,
            birthDate: form.birthDate.value || '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
            learningFormat: form.querySelector('input[name="learningFormat"]:checked').value,
            message: form.message.value || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            dataConsent: form.dataConsent.checked ? '–î–∞' : '–ù–µ—Ç',
            marketingConsent: form.marketingConsent.checked ? '–î–∞' : '–ù–µ—Ç'
        };
        
        const telegramMessage = `
üéì <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ!</b>

üë§ <b>–ò–º—è:</b> ${formData.firstName} ${formData.lastName}
üì± <b>Telegram:</b> ${formData.telegram}
üìß <b>Email:</b> ${formData.email}
üéÇ <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> ${formData.birthDate}
üìö <b>–§–æ—Ä–º–∞—Ç:</b> ${formData.learningFormat}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${formData.message}

‚úÖ <b>–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–∞–Ω–Ω—ã–µ:</b> ${formData.dataConsent}
üì¨ <b>–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É:</b> ${formData.marketingConsent}

‚è∞ ${new Date().toLocaleString('ru-RU')}
        `.trim();
        
        // –ó–ê–ú–ï–ù–ò–¢–ï –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram
        const TELEGRAM_BOT_TOKEN = '8216529528:AAHER15apsFJj8Hhr3BtZkCu3l8IX_m4TF8';
        const TELEGRAM_CHAT_ID = '-4800087723';
        
        const response = await fetch(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: TELEGRAM_CHAT_ID,
                    text: telegramMessage,
                    parse_mode: 'HTML'
                })
            }
        );
        
        if (!response.ok) {
            const errorData = await response.json();
            console.error('Telegram API error:', errorData);
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram');
        }
        
        statusDiv.innerHTML = `
            <div class="alert alert-success alert-dismissible fade show mt-3" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:">
                    <use xlink:href="#check-circle-fill"/>
                </svg>
                <strong>–û—Ç–ª–∏—á–Ω–æ!</strong> –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ Telegram.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;
        
        form.reset();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        
        statusDiv.innerHTML = `
            <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
                <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Error:">
                    <use xlink:href="#exclamation-triangle-fill"/>
                </svg>
                <strong>–û—à–∏–±–∫–∞!</strong> –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é –≤ 
                <a href="https://t.me/thetutoress" target="_blank" class="alert-link">Telegram</a> –∏–ª–∏ –Ω–∞ 
                <a href="mailto:thetutoress.eng@gmail.com" class="alert-link">Email</a>.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;
    } finally {
        submitButton.disabled = false;
        submitButton.innerHTML = '{{ .Site.Params.contact.btnName | default "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" }}';
        statusDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∞–ª–µ—Ä—Ç–æ–≤
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('btn-close')) {
        e.target.closest('.alert').remove();
    }
});